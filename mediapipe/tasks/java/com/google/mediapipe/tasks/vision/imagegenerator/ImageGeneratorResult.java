// Copyright 2023 The MediaPipe Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package com.google.mediapipe.tasks.vision.imagegenerator;

import com.google.auto.value.AutoValue;
import com.google.mediapipe.framework.image.MPImage;
import com.google.mediapipe.tasks.core.TaskResult;
import java.util.Optional;

/** Represents the image generation results generated by {@link ImageGenerator}. */
@AutoValue
public abstract class ImageGeneratorResult implements TaskResult {

  /** Create an {@link ImageGeneratorResult} instance from the generated image. */
  public static ImageGeneratorResult create(
      MPImage generatedImage, MPImage conditionImage, long timestampMs) {
    return new AutoValue_ImageGeneratorResult(
        generatedImage, Optional.of(conditionImage), timestampMs);
  }

  /** Create an {@link ImageGeneratorResult} instance from the generated image. */
  public static ImageGeneratorResult create(MPImage generatedImage, long timestampMs) {
    return new AutoValue_ImageGeneratorResult(generatedImage, Optional.empty(), timestampMs);
  }

  public abstract MPImage generatedImage();

  public abstract Optional<MPImage> conditionImage();

  @Override
  public abstract long timestampMs();
}
