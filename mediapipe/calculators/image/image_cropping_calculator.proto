// Copyright 2019 The MediaPipe Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";

package mediapipe;

import "mediapipe/framework/calculator.proto";

message ImageCroppingCalculatorOptions {
  extend CalculatorOptions {
    optional ImageCroppingCalculatorOptions ext = 262466399;
  }

  // Output texture buffer dimensions. The values defined in the options will be
  // overridden by the WIDTH and HEIGHT input streams if they exist.
  optional int32 width = 1;
  optional int32 height = 2;

  // Rotation angle is counter-clockwise in radian.
  optional float rotation = 3 [default = 0.0];

  // Normalized width and height of the output rect. Value is within [0, 1].
  optional float norm_width = 4;
  optional float norm_height = 5;

  // Normalized location of the center of the output
  // rectangle in image coordinates. Value is within [0, 1].
  // The (0, 0) point is at the (top, left) corner.
  optional float norm_center_x = 6 [default = 0];
  optional float norm_center_y = 7 [default = 0];

  enum BorderMode {
    // First unspecified value is required by the guideline. See details here:
    // https://developers.google.com/protocol-buffers/docs/style#enums
    BORDER_UNSPECIFIED = 0;
    BORDER_ZERO = 1;
    BORDER_REPLICATE = 2;
  }

  // Specifies behaviour for crops that go beyond image borders.
  optional BorderMode border_mode = 8 [default = BORDER_ZERO];

  // Specifies limits for the size of the output image. It will be scaled down,
  // preserving ratio, to fit within. These do not change which area of the
  // input is selected for cropping.
  optional int32 output_max_width = 9;
  optional int32 output_max_height = 10;
}
